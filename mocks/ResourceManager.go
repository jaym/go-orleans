// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	grain "github.com/jaym/go-orleans/grain"
	mock "github.com/stretchr/testify/mock"
)

// ResourceManager is an autogenerated mock type for the ResourceManager type
type ResourceManager struct {
	mock.Mock
}

// Remove provides a mock function with given fields: grainAddr
func (_m *ResourceManager) Remove(grainAddr grain.Identity) error {
	ret := _m.Called(grainAddr)

	var r0 error
	if rf, ok := ret.Get(0).(func(grain.Identity) error); ok {
		r0 = rf(grainAddr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Touch provides a mock function with given fields: grainAddr
func (_m *ResourceManager) Touch(grainAddr grain.Identity) error {
	ret := _m.Called(grainAddr)

	var r0 error
	if rf, ok := ret.Get(0).(func(grain.Identity) error); ok {
		r0 = rf(grainAddr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewResourceManager interface {
	mock.TestingT
	Cleanup(func())
}

// NewResourceManager creates a new instance of ResourceManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResourceManager(t mockConstructorTestingTNewResourceManager) *ResourceManager {
	mock := &ResourceManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
