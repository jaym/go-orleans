// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	grain "github.com/jaym/go-orleans/grain"
	mock "github.com/stretchr/testify/mock"
)

// SiloClient is an autogenerated mock type for the SiloClient type
type SiloClient struct {
	mock.Mock
}

// InvokeMethodV2 provides a mock function with given fields: ctx, toIdentity, method, ser
func (_m *SiloClient) InvokeMethodV2(ctx context.Context, toIdentity grain.Identity, method string, ser func(grain.Serializer) error) grain.InvokeMethodFutureV2 {
	ret := _m.Called(ctx, toIdentity, method, ser)

	var r0 grain.InvokeMethodFutureV2
	if rf, ok := ret.Get(0).(func(context.Context, grain.Identity, string, func(grain.Serializer) error) grain.InvokeMethodFutureV2); ok {
		r0 = rf(ctx, toIdentity, method, ser)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(grain.InvokeMethodFutureV2)
		}
	}

	return r0
}

// InvokeOneWayMethod provides a mock function with given fields: ctx, toIdentity, method, ser
func (_m *SiloClient) InvokeOneWayMethod(ctx context.Context, toIdentity []grain.Identity, method string, ser func(grain.Serializer) error) {
	_m.Called(ctx, toIdentity, method, ser)
}

type mockConstructorTestingTNewSiloClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewSiloClient creates a new instance of SiloClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSiloClient(t mockConstructorTestingTNewSiloClient) *SiloClient {
	mock := &SiloClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
