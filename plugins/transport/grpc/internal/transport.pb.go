// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.9
// source: transport.proto

package internal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GrainIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrainType string `protobuf:"bytes,1,opt,name=grain_type,json=grainType,proto3" json:"grain_type,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GrainIdentity) Reset() {
	*x = GrainIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrainIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrainIdentity) ProtoMessage() {}

func (x *GrainIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrainIdentity.ProtoReflect.Descriptor instead.
func (*GrainIdentity) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{0}
}

func (x *GrainIdentity) GetGrainType() string {
	if x != nil {
		return x.GrainType
	}
	return ""
}

func (x *GrainIdentity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Hello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Port int64  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Hello) Reset() {
	*x = Hello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hello) ProtoMessage() {}

func (x *Hello) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hello.ProtoReflect.Descriptor instead.
func (*Hello) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{1}
}

func (x *Hello) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hello) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Hello) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type InvokeMethodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   *GrainIdentity `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver *GrainIdentity `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Method   string         `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Uuid     string         `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Payload  []byte         `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *InvokeMethodReq) Reset() {
	*x = InvokeMethodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeMethodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeMethodReq) ProtoMessage() {}

func (x *InvokeMethodReq) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeMethodReq.ProtoReflect.Descriptor instead.
func (*InvokeMethodReq) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2}
}

func (x *InvokeMethodReq) GetSender() *GrainIdentity {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *InvokeMethodReq) GetReceiver() *GrainIdentity {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *InvokeMethodReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *InvokeMethodReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InvokeMethodReq) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type InvokeOneWayMethodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     *GrainIdentity   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receivers  []*GrainIdentity `protobuf:"bytes,2,rep,name=receivers,proto3" json:"receivers,omitempty"`
	MethodName string           `protobuf:"bytes,4,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	Payload    []byte           `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *InvokeOneWayMethodReq) Reset() {
	*x = InvokeOneWayMethodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeOneWayMethodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeOneWayMethodReq) ProtoMessage() {}

func (x *InvokeOneWayMethodReq) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeOneWayMethodReq.ProtoReflect.Descriptor instead.
func (*InvokeOneWayMethodReq) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3}
}

func (x *InvokeOneWayMethodReq) GetSender() *GrainIdentity {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *InvokeOneWayMethodReq) GetReceivers() []*GrainIdentity {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *InvokeOneWayMethodReq) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *InvokeOneWayMethodReq) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type InvokeMethodResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver *GrainIdentity `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Uuid     string         `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Payload  []byte         `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Err      []byte         `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *InvokeMethodResp) Reset() {
	*x = InvokeMethodResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeMethodResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeMethodResp) ProtoMessage() {}

func (x *InvokeMethodResp) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeMethodResp.ProtoReflect.Descriptor instead.
func (*InvokeMethodResp) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{4}
}

func (x *InvokeMethodResp) GetReceiver() *GrainIdentity {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *InvokeMethodResp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InvokeMethodResp) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *InvokeMethodResp) GetErr() []byte {
	if x != nil {
		return x.Err
	}
	return nil
}

type RegisterObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Observer   *GrainIdentity           `protobuf:"bytes,1,opt,name=observer,proto3" json:"observer,omitempty"`
	Observable *GrainIdentity           `protobuf:"bytes,2,opt,name=observable,proto3" json:"observable,omitempty"`
	Name       string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Uuid       string                   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Payload    []byte                   `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Opts       *RegisterObserverOptions `protobuf:"bytes,6,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *RegisterObserver) Reset() {
	*x = RegisterObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterObserver) ProtoMessage() {}

func (x *RegisterObserver) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterObserver.ProtoReflect.Descriptor instead.
func (*RegisterObserver) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterObserver) GetObserver() *GrainIdentity {
	if x != nil {
		return x.Observer
	}
	return nil
}

func (x *RegisterObserver) GetObservable() *GrainIdentity {
	if x != nil {
		return x.Observable
	}
	return nil
}

func (x *RegisterObserver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterObserver) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RegisterObserver) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RegisterObserver) GetOpts() *RegisterObserverOptions {
	if x != nil {
		return x.Opts
	}
	return nil
}

type RegisterObserverOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: replace with Duration type
	RegistrationTimeoutMillis int64 `protobuf:"varint,1,opt,name=registrationTimeoutMillis,proto3" json:"registrationTimeoutMillis,omitempty"`
}

func (x *RegisterObserverOptions) Reset() {
	*x = RegisterObserverOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterObserverOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterObserverOptions) ProtoMessage() {}

func (x *RegisterObserverOptions) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterObserverOptions.ProtoReflect.Descriptor instead.
func (*RegisterObserverOptions) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterObserverOptions) GetRegistrationTimeoutMillis() int64 {
	if x != nil {
		return x.RegistrationTimeoutMillis
	}
	return 0
}

type AckRegisterObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver *GrainIdentity `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Uuid     string         `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Err      []byte         `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *AckRegisterObserver) Reset() {
	*x = AckRegisterObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckRegisterObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRegisterObserver) ProtoMessage() {}

func (x *AckRegisterObserver) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRegisterObserver.ProtoReflect.Descriptor instead.
func (*AckRegisterObserver) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{7}
}

func (x *AckRegisterObserver) GetReceiver() *GrainIdentity {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *AckRegisterObserver) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AckRegisterObserver) GetErr() []byte {
	if x != nil {
		return x.Err
	}
	return nil
}

type ObserverNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         *GrainIdentity   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receivers      []*GrainIdentity `protobuf:"bytes,2,rep,name=receivers,proto3" json:"receivers,omitempty"`
	ObservableType string           `protobuf:"bytes,3,opt,name=observableType,proto3" json:"observableType,omitempty"`
	Name           string           `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Payload        []byte           `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ObserverNotification) Reset() {
	*x = ObserverNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObserverNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserverNotification) ProtoMessage() {}

func (x *ObserverNotification) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserverNotification.ProtoReflect.Descriptor instead.
func (*ObserverNotification) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{8}
}

func (x *ObserverNotification) GetSender() *GrainIdentity {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *ObserverNotification) GetReceivers() []*GrainIdentity {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *ObserverNotification) GetObservableType() string {
	if x != nil {
		return x.ObservableType
	}
	return ""
}

func (x *ObserverNotification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObserverNotification) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UnsubscribeObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Observer   *GrainIdentity `protobuf:"bytes,1,opt,name=observer,proto3" json:"observer,omitempty"`
	Observable *GrainIdentity `protobuf:"bytes,2,opt,name=observable,proto3" json:"observable,omitempty"`
	Name       string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Uuid       string         `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *UnsubscribeObserver) Reset() {
	*x = UnsubscribeObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeObserver) ProtoMessage() {}

func (x *UnsubscribeObserver) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeObserver.ProtoReflect.Descriptor instead.
func (*UnsubscribeObserver) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{9}
}

func (x *UnsubscribeObserver) GetObserver() *GrainIdentity {
	if x != nil {
		return x.Observer
	}
	return nil
}

func (x *UnsubscribeObserver) GetObservable() *GrainIdentity {
	if x != nil {
		return x.Observable
	}
	return nil
}

func (x *UnsubscribeObserver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnsubscribeObserver) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type AckUnsubscribeObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver *GrainIdentity `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Uuid     string         `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Err      []byte         `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *AckUnsubscribeObserver) Reset() {
	*x = AckUnsubscribeObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckUnsubscribeObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckUnsubscribeObserver) ProtoMessage() {}

func (x *AckUnsubscribeObserver) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckUnsubscribeObserver.ProtoReflect.Descriptor instead.
func (*AckUnsubscribeObserver) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{10}
}

func (x *AckUnsubscribeObserver) GetReceiver() *GrainIdentity {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *AckUnsubscribeObserver) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AckUnsubscribeObserver) GetErr() []byte {
	if x != nil {
		return x.Err
	}
	return nil
}

type TransportMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeadlineUnix int64 `protobuf:"varint,1,opt,name=deadline_unix,json=deadlineUnix,proto3" json:"deadline_unix,omitempty"`
	// Types that are assignable to Msg:
	//	*TransportMessage_Hello
	//	*TransportMessage_InvokeMethodReq
	//	*TransportMessage_InvokeMethodResp
	//	*TransportMessage_RegisterObserver
	//	*TransportMessage_ObserverNotification
	//	*TransportMessage_AckRegisterObserver
	//	*TransportMessage_UnsubscribeObserver
	//	*TransportMessage_AckUnsubscribeObserver
	//	*TransportMessage_InvokeOneWayMethodReq
	Msg isTransportMessage_Msg `protobuf_oneof:"msg"`
}

func (x *TransportMessage) Reset() {
	*x = TransportMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportMessage) ProtoMessage() {}

func (x *TransportMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportMessage.ProtoReflect.Descriptor instead.
func (*TransportMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{11}
}

func (x *TransportMessage) GetDeadlineUnix() int64 {
	if x != nil {
		return x.DeadlineUnix
	}
	return 0
}

func (m *TransportMessage) GetMsg() isTransportMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *TransportMessage) GetHello() *Hello {
	if x, ok := x.GetMsg().(*TransportMessage_Hello); ok {
		return x.Hello
	}
	return nil
}

func (x *TransportMessage) GetInvokeMethodReq() *InvokeMethodReq {
	if x, ok := x.GetMsg().(*TransportMessage_InvokeMethodReq); ok {
		return x.InvokeMethodReq
	}
	return nil
}

func (x *TransportMessage) GetInvokeMethodResp() *InvokeMethodResp {
	if x, ok := x.GetMsg().(*TransportMessage_InvokeMethodResp); ok {
		return x.InvokeMethodResp
	}
	return nil
}

func (x *TransportMessage) GetRegisterObserver() *RegisterObserver {
	if x, ok := x.GetMsg().(*TransportMessage_RegisterObserver); ok {
		return x.RegisterObserver
	}
	return nil
}

func (x *TransportMessage) GetObserverNotification() *ObserverNotification {
	if x, ok := x.GetMsg().(*TransportMessage_ObserverNotification); ok {
		return x.ObserverNotification
	}
	return nil
}

func (x *TransportMessage) GetAckRegisterObserver() *AckRegisterObserver {
	if x, ok := x.GetMsg().(*TransportMessage_AckRegisterObserver); ok {
		return x.AckRegisterObserver
	}
	return nil
}

func (x *TransportMessage) GetUnsubscribeObserver() *UnsubscribeObserver {
	if x, ok := x.GetMsg().(*TransportMessage_UnsubscribeObserver); ok {
		return x.UnsubscribeObserver
	}
	return nil
}

func (x *TransportMessage) GetAckUnsubscribeObserver() *AckUnsubscribeObserver {
	if x, ok := x.GetMsg().(*TransportMessage_AckUnsubscribeObserver); ok {
		return x.AckUnsubscribeObserver
	}
	return nil
}

func (x *TransportMessage) GetInvokeOneWayMethodReq() *InvokeOneWayMethodReq {
	if x, ok := x.GetMsg().(*TransportMessage_InvokeOneWayMethodReq); ok {
		return x.InvokeOneWayMethodReq
	}
	return nil
}

type isTransportMessage_Msg interface {
	isTransportMessage_Msg()
}

type TransportMessage_Hello struct {
	Hello *Hello `protobuf:"bytes,64,opt,name=hello,proto3,oneof"`
}

type TransportMessage_InvokeMethodReq struct {
	InvokeMethodReq *InvokeMethodReq `protobuf:"bytes,2,opt,name=invoke_method_req,json=invokeMethodReq,proto3,oneof"`
}

type TransportMessage_InvokeMethodResp struct {
	InvokeMethodResp *InvokeMethodResp `protobuf:"bytes,3,opt,name=invoke_method_resp,json=invokeMethodResp,proto3,oneof"`
}

type TransportMessage_RegisterObserver struct {
	RegisterObserver *RegisterObserver `protobuf:"bytes,4,opt,name=register_observer,json=registerObserver,proto3,oneof"`
}

type TransportMessage_ObserverNotification struct {
	ObserverNotification *ObserverNotification `protobuf:"bytes,5,opt,name=observer_notification,json=observerNotification,proto3,oneof"`
}

type TransportMessage_AckRegisterObserver struct {
	AckRegisterObserver *AckRegisterObserver `protobuf:"bytes,6,opt,name=ack_register_observer,json=ackRegisterObserver,proto3,oneof"`
}

type TransportMessage_UnsubscribeObserver struct {
	UnsubscribeObserver *UnsubscribeObserver `protobuf:"bytes,7,opt,name=unsubscribe_observer,json=unsubscribeObserver,proto3,oneof"`
}

type TransportMessage_AckUnsubscribeObserver struct {
	AckUnsubscribeObserver *AckUnsubscribeObserver `protobuf:"bytes,8,opt,name=ack_unsubscribe_observer,json=ackUnsubscribeObserver,proto3,oneof"`
}

type TransportMessage_InvokeOneWayMethodReq struct {
	InvokeOneWayMethodReq *InvokeOneWayMethodReq `protobuf:"bytes,9,opt,name=invoke_one_way_method_req,json=invokeOneWayMethodReq,proto3,oneof"`
}

func (*TransportMessage_Hello) isTransportMessage_Msg() {}

func (*TransportMessage_InvokeMethodReq) isTransportMessage_Msg() {}

func (*TransportMessage_InvokeMethodResp) isTransportMessage_Msg() {}

func (*TransportMessage_RegisterObserver) isTransportMessage_Msg() {}

func (*TransportMessage_ObserverNotification) isTransportMessage_Msg() {}

func (*TransportMessage_AckRegisterObserver) isTransportMessage_Msg() {}

func (*TransportMessage_UnsubscribeObserver) isTransportMessage_Msg() {}

func (*TransportMessage_AckUnsubscribeObserver) isTransportMessage_Msg() {}

func (*TransportMessage_InvokeOneWayMethodReq) isTransportMessage_Msg() {}

type SendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *TransportMessage `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{12}
}

func (x *SendRequest) GetMsg() *TransportMessage {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{13}
}

var File_transport_proto protoreflect.FileDescriptor

var file_transport_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x22, 0x3e, 0x0a, 0x0d, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x69, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x0f,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x3a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0xd0, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x6e, 0x65, 0x57,
	0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f,
	0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f,
	0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f,
	0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x9a, 0x02, 0x0a, 0x10, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3e,
	0x0a, 0x08, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x42,
	0x0a, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x40, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x22,
	0x7b, 0x0a, 0x13, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xea, 0x01, 0x0a,
	0x14, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x40, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x3e, 0x0a, 0x08, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x42, 0x0a, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x7e, 0x0a,
	0x16, 0x41, 0x63, 0x6b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x72,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xe5, 0x06,
	0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x32, 0x0a, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x52, 0x0a, 0x11, 0x69,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f,
	0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x55, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f,
	0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x15,
	0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f,
	0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e,
	0x0a, 0x15, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x5d,
	0x0a, 0x14, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67,
	0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x67, 0x0a,
	0x18, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x6b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x16,
	0x61, 0x63, 0x6b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x66, 0x0a, 0x19, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65,
	0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x77, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x72,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x6e, 0x65, 0x57, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4f,
	0x6e, 0x65, 0x57, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x42, 0x05,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x46, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x0e, 0x0a,
	0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x5f, 0x0a,
	0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x53, 0x65,
	0x6e, 0x64, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x72,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0x3c,
	0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x79,
	0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x6f, 0x72, 0x6c, 0x65, 0x61, 0x6e, 0x73, 0x2f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transport_proto_rawDescOnce sync.Once
	file_transport_proto_rawDescData = file_transport_proto_rawDesc
)

func file_transport_proto_rawDescGZIP() []byte {
	file_transport_proto_rawDescOnce.Do(func() {
		file_transport_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_proto_rawDescData)
	})
	return file_transport_proto_rawDescData
}

var file_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_transport_proto_goTypes = []interface{}{
	(*GrainIdentity)(nil),           // 0: goor.transport.grpc.GrainIdentity
	(*Hello)(nil),                   // 1: goor.transport.grpc.Hello
	(*InvokeMethodReq)(nil),         // 2: goor.transport.grpc.InvokeMethodReq
	(*InvokeOneWayMethodReq)(nil),   // 3: goor.transport.grpc.InvokeOneWayMethodReq
	(*InvokeMethodResp)(nil),        // 4: goor.transport.grpc.InvokeMethodResp
	(*RegisterObserver)(nil),        // 5: goor.transport.grpc.RegisterObserver
	(*RegisterObserverOptions)(nil), // 6: goor.transport.grpc.RegisterObserverOptions
	(*AckRegisterObserver)(nil),     // 7: goor.transport.grpc.AckRegisterObserver
	(*ObserverNotification)(nil),    // 8: goor.transport.grpc.ObserverNotification
	(*UnsubscribeObserver)(nil),     // 9: goor.transport.grpc.UnsubscribeObserver
	(*AckUnsubscribeObserver)(nil),  // 10: goor.transport.grpc.AckUnsubscribeObserver
	(*TransportMessage)(nil),        // 11: goor.transport.grpc.TransportMessage
	(*SendRequest)(nil),             // 12: goor.transport.grpc.SendRequest
	(*SendResponse)(nil),            // 13: goor.transport.grpc.SendResponse
}
var file_transport_proto_depIdxs = []int32{
	0,  // 0: goor.transport.grpc.InvokeMethodReq.sender:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 1: goor.transport.grpc.InvokeMethodReq.receiver:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 2: goor.transport.grpc.InvokeOneWayMethodReq.sender:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 3: goor.transport.grpc.InvokeOneWayMethodReq.receivers:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 4: goor.transport.grpc.InvokeMethodResp.receiver:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 5: goor.transport.grpc.RegisterObserver.observer:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 6: goor.transport.grpc.RegisterObserver.observable:type_name -> goor.transport.grpc.GrainIdentity
	6,  // 7: goor.transport.grpc.RegisterObserver.opts:type_name -> goor.transport.grpc.RegisterObserverOptions
	0,  // 8: goor.transport.grpc.AckRegisterObserver.receiver:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 9: goor.transport.grpc.ObserverNotification.sender:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 10: goor.transport.grpc.ObserverNotification.receivers:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 11: goor.transport.grpc.UnsubscribeObserver.observer:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 12: goor.transport.grpc.UnsubscribeObserver.observable:type_name -> goor.transport.grpc.GrainIdentity
	0,  // 13: goor.transport.grpc.AckUnsubscribeObserver.receiver:type_name -> goor.transport.grpc.GrainIdentity
	1,  // 14: goor.transport.grpc.TransportMessage.hello:type_name -> goor.transport.grpc.Hello
	2,  // 15: goor.transport.grpc.TransportMessage.invoke_method_req:type_name -> goor.transport.grpc.InvokeMethodReq
	4,  // 16: goor.transport.grpc.TransportMessage.invoke_method_resp:type_name -> goor.transport.grpc.InvokeMethodResp
	5,  // 17: goor.transport.grpc.TransportMessage.register_observer:type_name -> goor.transport.grpc.RegisterObserver
	8,  // 18: goor.transport.grpc.TransportMessage.observer_notification:type_name -> goor.transport.grpc.ObserverNotification
	7,  // 19: goor.transport.grpc.TransportMessage.ack_register_observer:type_name -> goor.transport.grpc.AckRegisterObserver
	9,  // 20: goor.transport.grpc.TransportMessage.unsubscribe_observer:type_name -> goor.transport.grpc.UnsubscribeObserver
	10, // 21: goor.transport.grpc.TransportMessage.ack_unsubscribe_observer:type_name -> goor.transport.grpc.AckUnsubscribeObserver
	3,  // 22: goor.transport.grpc.TransportMessage.invoke_one_way_method_req:type_name -> goor.transport.grpc.InvokeOneWayMethodReq
	11, // 23: goor.transport.grpc.SendRequest.msg:type_name -> goor.transport.grpc.TransportMessage
	11, // 24: goor.transport.grpc.Transport.Send:input_type -> goor.transport.grpc.TransportMessage
	13, // 25: goor.transport.grpc.Transport.Send:output_type -> goor.transport.grpc.SendResponse
	25, // [25:26] is the sub-list for method output_type
	24, // [24:25] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_transport_proto_init() }
func file_transport_proto_init() {
	if File_transport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrainIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeMethodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeOneWayMethodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeMethodResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterObserverOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckRegisterObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObserverNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckUnsubscribeObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transport_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*TransportMessage_Hello)(nil),
		(*TransportMessage_InvokeMethodReq)(nil),
		(*TransportMessage_InvokeMethodResp)(nil),
		(*TransportMessage_RegisterObserver)(nil),
		(*TransportMessage_ObserverNotification)(nil),
		(*TransportMessage_AckRegisterObserver)(nil),
		(*TransportMessage_UnsubscribeObserver)(nil),
		(*TransportMessage_AckUnsubscribeObserver)(nil),
		(*TransportMessage_InvokeOneWayMethodReq)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transport_proto_goTypes,
		DependencyIndexes: file_transport_proto_depIdxs,
		MessageInfos:      file_transport_proto_msgTypes,
	}.Build()
	File_transport_proto = out.File
	file_transport_proto_rawDesc = nil
	file_transport_proto_goTypes = nil
	file_transport_proto_depIdxs = nil
}
